<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CategoryCreated" xml:space="preserve">
    <value>Kategori oluşturuldu.</value>
  </data>
  <data name="CategoryDeleted" xml:space="preserve">
    <value>Kategori silindi.</value>
  </data>
  <data name="CategoryFound" xml:space="preserve">
    <value>Kategori bulundu.</value>
  </data>
  <data name="CategoryNameRequired" xml:space="preserve">
    <value>Kategori adı girmek zorunludur.</value>
  </data>
  <data name="CategoryNameTooLong" xml:space="preserve">
    <value>Kategori adı çok uzun.</value>
  </data>
  <data name="CategoryNameTooShort" xml:space="preserve">
    <value>Kategori adı çok kısa.</value>
  </data>
  <data name="CategoryNotFound" xml:space="preserve">
    <value>Kategori bulunamadı.</value>
  </data>
  <data name="CategoryUpdated" xml:space="preserve">
    <value>Kategori güncellendi.</value>
  </data>
  <data name="ColorFormatInvalid" xml:space="preserve">
    <value>Renk sadece harf içerebilir.</value>
  </data>
  <data name="ColorRequired" xml:space="preserve">
    <value>Renk gereklidir.</value>
  </data>
  <data name="DescriptionTooLong" xml:space="preserve">
    <value>Açıklama en fazla 1000 karakterden oluşabilir.</value>
  </data>
  <data name="EmailFormatInvalid" xml:space="preserve">
    <value>Geçersiz e-mail formatı.</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>E-mail gereklidir.</value>
  </data>
  <data name="GenericError" xml:space="preserve">
    <value>İşlem başarısız.</value>
  </data>
  <data name="GenericSuccess" xml:space="preserve">
    <value>İşlem başarılı.</value>
  </data>
  <data name="ImageUrlInvalid" xml:space="preserve">
    <value>Geçersiz görsel URL'si.</value>
  </data>
  <data name="ImageUrlRequired" xml:space="preserve">
    <value>Görsel URL'si zorunludur.</value>
  </data>
  <data name="NameCannotStartsWithGh" xml:space="preserve">
    <value>Ad "ğ" harfiyle başlayamaz.</value>
  </data>
  <data name="NameMustStartWithUppercase" xml:space="preserve">
    <value>Ad büyük harf ile başlamak zorunda.</value>
  </data>
  <data name="NameRequired" xml:space="preserve">
    <value>Şehir adı boş bırakılamaz.</value>
  </data>
  <data name="OperationSuccessful" xml:space="preserve">
    <value>İşlem başarılı.</value>
  </data>
  <data name="PriceCannotBeNegative" xml:space="preserve">
    <value>Fiyat negatif olamaz.</value>
  </data>
  <data name="PriceCannotBeZero" xml:space="preserve">
    <value>Fiyat sıfır olamaz.</value>
  </data>
  <data name="ProductCreated" xml:space="preserve">
    <value>Ürün oluşturuldu.</value>
  </data>
  <data name="ProductDeleted" xml:space="preserve">
    <value>Ürün silindi.</value>
  </data>
  <data name="ProductFound" xml:space="preserve">
    <value>Ürün bulundu.</value>
  </data>
  <data name="ProductImageCreated" xml:space="preserve">
    <value>Ürün görseli eklendi.</value>
  </data>
  <data name="ProductImageDeleted" xml:space="preserve">
    <value>Ürün görseli silindi.</value>
  </data>
  <data name="ProductImageFound" xml:space="preserve">
    <value>Ürün görseli bulundu.</value>
  </data>
  <data name="ProductImageNotFound" xml:space="preserve">
    <value>Ürün görseli bulunamadı.</value>
  </data>
  <data name="ProductImageUpdated" xml:space="preserve">
    <value>Ürün görseli güncellendi.</value>
  </data>
  <data name="ProductNameRequired" xml:space="preserve">
    <value>Ürün adı girmek zorunludur.</value>
  </data>
  <data name="ProductNameTooLong" xml:space="preserve">
    <value>Ürün adı çok uzun.</value>
  </data>
  <data name="ProductNameTooShort" xml:space="preserve">
    <value>Ürün adı çok kısa.</value>
  </data>
  <data name="ProductNotFound" xml:space="preserve">
    <value>Ürün bulunamadı.</value>
  </data>
  <data name="ProductUpdated" xml:space="preserve">
    <value>Ürün güncellendi.</value>
  </data>
  <data name="ProductVariantCreated" xml:space="preserve">
    <value>Ürün varyantı eklendi.</value>
  </data>
  <data name="ProductVariantDeleted" xml:space="preserve">
    <value>Ürünün varyantı silindi.</value>
  </data>
  <data name="ProductVariantFound" xml:space="preserve">
    <value>Ürünün varyantı bulundu.</value>
  </data>
  <data name="ProductVariantNotFound" xml:space="preserve">
    <value>Ürün varyantı bulunamadı.</value>
  </data>
  <data name="ProductVariantUpdated" xml:space="preserve">
    <value>Ürün varyantı güncellendi.</value>
  </data>
  <data name="SizeInvalid" xml:space="preserve">
    <value>Geçersiz beden (XS, S, M, L, XL, XXL, XXXL olmalı)</value>
  </data>
  <data name="SizeRequired" xml:space="preserve">
    <value>Beden bilgisi gereklidir.</value>
  </data>
  <data name="SkuFormatInvalid" xml:space="preserve">
    <value>SKU formatı geçersiz.</value>
    <comment>Sku formatı: siyah-elbise gibi</comment>
  </data>
  <data name="SkuRequired" xml:space="preserve">
    <value>SKU alanı zorunludur.</value>
  </data>
  <data name="SlugFormatInvalid" xml:space="preserve">
    <value>Slug sadece küçük harf, rakam ve tire içerebilir. Lütfen tekrar deneyin.</value>
  </data>
  <data name="SlugRequired" xml:space="preserve">
    <value>Slug gereklidir.</value>
  </data>
  <data name="SlugTooShort" xml:space="preserve">
    <value>Slug en az 3 karakterden oluşmalıdır.</value>
  </data>
  <data name="StockCannotBeNegative" xml:space="preserve">
    <value>Stok negatif olamaz</value>
  </data>
  <data name="ValidationError" xml:space="preserve">
    <value>Doğrulama hatası.</value>
  </data>
  <data name="ValidationSuccessful" xml:space="preserve">
    <value>Doğrulama başarılı.</value>
  </data>
  <data name="DescriptionRequired" xml:space="preserve">
    <value>Açıklama alanı zorunludur.</value>
  </data>
  <data name="DescriptionTooShort" xml:space="preserve">
    <value>Açıklama çok kısa.</value>
  </data>
  <data name="UrlRequired" xml:space="preserve">
    <value>URL alanı zorunludur.</value>
  </data>
  <data name="UrlInvalid" xml:space="preserve">
    <value>Geçersiz URL.</value>
  </data>
  <data name="SkuTooShort" xml:space="preserve">
    <value>SKU çok kısa.</value>
  </data>
</root>